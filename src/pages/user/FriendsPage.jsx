import { useState } from "react";
import { Button } from "../../components/ui/button";
import { ScrollArea } from "../../components/ui/scroll-area";
import { Card, CardContent } from "../../components/ui/card";
import { UserIcon, UsersIcon, GiftIcon, ListIcon, HomeIcon, MoreVertical } from "lucide-react";
import Header from '../../components/header/header';
import './FriendsPage.css';

const friends = [
  {
    name: "B√≠ch Tr√¢m",
    mutual: 1,
    avatar: "https://via.placeholder.com/100",
  },
  {
    name: "Olivia B√πi",
    mutual: 0,
    avatar: "https://via.placeholder.com/100",
  },
  {
    name: "H·ªì Ng·ªçc ƒêi·ªáp",
    mutual: 24,
    avatar: "https://via.placeholder.com/100",
  },
  {
    name: "Nguy·ªÖn Th·ªã Ng·ªçc B√≠ch",
    mutual: 66,
    avatar: "https://via.placeholder.com/100",
  },
  {
    name: "Th√πy Trung",
    mutual: 16,
    avatar: "https://via.placeholder.com/100",
  },
  {
    name: "√Ånh Tr√∫c",
    mutual: 19,
    avatar: "https://via.placeholder.com/100",
  },
];

const allFriends = [
  { name: "Huy Nguy·ªÖn", mutual: 8, avatar: "https://via.placeholder.com/100" },
  { name: "Minh Tr·∫ßn", mutual: 3, avatar: "https://via.placeholder.com/100" },
  { name: "Lan Ph·∫°m", mutual: 10, avatar: "https://via.placeholder.com/100" },
  { name: "T√∫ Anh", mutual: 0, avatar: "https://via.placeholder.com/100" },
  { name: "Duy Kh√°nh", mutual: 5, avatar: "https://via.placeholder.com/100" },
  { name: "Ho√†i B·∫£o", mutual: 2, avatar: "https://via.placeholder.com/100" },
  { name: "Th·∫£o Vy", mutual: 1, avatar: "https://via.placeholder.com/100" },
  { name: "Thanh H·∫±ng", mutual: 7, avatar: "https://via.placeholder.com/100" },
  { name: "B·∫£o Ch√¢u", mutual: 4, avatar: "https://via.placeholder.com/100" },
  { name: "Trung T√≠n", mutual: 9, avatar: "https://via.placeholder.com/100" },
  { name: "Qu·ªëc Huy", mutual: 6, avatar: "https://via.placeholder.com/100" },
  { name: "Ng·ªçc H√¢n", mutual: 0, avatar: "https://via.placeholder.com/100" },
  { name: "H·∫£i Y·∫øn", mutual: 3, avatar: "https://via.placeholder.com/100" },
  { name: "Thanh Tr√∫c", mutual: 1, avatar: "https://via.placeholder.com/100" },
  { name: "Kh√°nh Linh", mutual: 11, avatar: "https://via.placeholder.com/100" },
  { name: "Anh D≈©ng", mutual: 5, avatar: "https://via.placeholder.com/100" },
];

const Sidebar = ({ selected, onSelect }) => {
  const items = [
    { icon: <HomeIcon className="mr-2" />, label: "Trang ch·ªß" },
    { icon: <UserIcon className="mr-2" />, label: "L·ªùi m·ªùi k·∫øt b·∫°n" },
    { icon: <UsersIcon className="mr-2" />, label: "T·∫•t c·∫£ b·∫°n b√®" },
  ];

  return (
    <div className="w-64 border-r p-4 space-y-2 bg-white">
      <h2 className="text-xl font-bold mb-4">B·∫°n b√®</h2>
      {items.map((item) => (
        <button
          key={item.label}
          onClick={() => onSelect(item.label)}
          className={`flex items-center px-3 py-2 w-full rounded-lg text-left hover:bg-gray-100 transition ${
            selected === item.label ? "bg-gray-200 font-semibold" : ""
          }`}
        >
          {item.icon}
          {item.label}
        </button>
      ))}
    </div>
  );
};

const FriendCard = ({ name, mutual, avatar }) => (
  <Card className="w-60">
    <CardContent className="p-4 text-center">
      <img src={avatar} alt={name} className="w-20 h-20 rounded-full mx-auto mb-2" />
      <div className="font-semibold">{name}</div>
      <div className="text-sm text-gray-500 min-h-[1.25rem]">
        {mutual > 0 ? `${mutual} b·∫°n chung` : <span>&nbsp;</span>}
      </div>
      <div className="flex justify-center gap-2 mt-2">
        <button className="friend-action confirm">X√°c nh·∫≠n</button>
        <button className="friend-action delete">X√≥a</button>
      </div>
    </CardContent>
  </Card>
);

const FriendCardSimple = ({ name, mutual, avatar }) => {
  const [showMenu, setShowMenu] = useState(false);

  return (
    <Card className="w-60 relative">
      <CardContent className="p-4 text-center">
        <img src={avatar} alt={name} className="w-20 h-20 rounded-full mx-auto mb-2" />
        <div className="font-semibold">{name}</div>
        <div className="text-sm text-gray-500 min-h-[1.25rem]">
          {mutual > 0 ? `${mutual} b·∫°n chung` : <span>&nbsp;</span>}
        </div>
        <button
          onClick={() => setShowMenu(!showMenu)}
          className="absolute top-2 right-2 text-gray-500 hover:text-black"
        >
          <MoreVertical />
        </button>
        {showMenu && (
          <div className="absolute top-10 right-2 bg-white border rounded shadow-lg z-10 text-left text-sm w-48">
            <button className="block w-full px-4 py-2 hover:bg-gray-100">‚ùå X√≥a k·∫øt b·∫°n v·ªõi {name}</button>
            <button className="block w-full px-4 py-2 hover:bg-gray-100">üö´ H·ªßy theo d√µi {name}</button>
            <button className="block w-full px-4 py-2 hover:bg-gray-100">üí¨ Nh·∫Øn tin cho {name}</button>
            <button className="block w-full px-4 py-2 hover:bg-gray-100 text-red-600">‚õî Ch·∫∑n {name}</button>
          </div>
        )}
      </CardContent>
    </Card>
  );
};

export default function FriendsPage() {
  const [tab, setTab] = useState("Trang ch·ªß");
  const [search, setSearch] = useState("");
  const [menuFriend, setMenuFriend] = useState(null);

  return (
    <div className="app-container flex flex-col h-screen">
      <Header />
      <div className="flex flex-1 bg-gray-100 mt-[56px]">
        <Sidebar selected={tab} onSelect={setTab} />
        <div className="flex-1 p-6 overflow-y-auto">
          {tab === "Trang ch·ªß" && <h1 className="text-2xl font-bold">Trang ch·ªß b·∫°n b√®</h1>}

          {tab === "L·ªùi m·ªùi k·∫øt b·∫°n" && (
            <div>
              <h1 className="text-2xl font-bold mb-4">L·ªùi m·ªùi k·∫øt b·∫°n</h1>
              <ScrollArea className="h-[calc(100vh-160px)] pr-2">
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
                  {friends.map((f) => (
                    <FriendCard key={f.name} {...f} />
                  ))}
                </div>
              </ScrollArea>
            </div>
          )}

          {tab === "T·∫•t c·∫£ b·∫°n b√®" && (
            <div>
              <h1 className="text-2xl font-bold mb-4">T·∫•t c·∫£ b·∫°n b√®</h1>
              <input
                type="text"
                placeholder="T√¨m ki·∫øm b·∫°n b√®..."
                value={search}
                onChange={(e) => setSearch(e.target.value)}
                className="w-full max-w-md px-4 py-2 border rounded mb-4"
              />
              <ScrollArea className="h-[calc(100vh-200px)] pr-2">
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
                  {allFriends
                    .filter((f) => f.name.toLowerCase().includes(search.toLowerCase()))
                    .map((f) => (
                      <FriendCardSimple key={f.name} {...f} />
                    ))}
                </div>
              </ScrollArea>
            </div>
          )}

          {tab !== "Trang ch·ªß" && tab !== "L·ªùi m·ªùi k·∫øt b·∫°n" && tab !== "T·∫•t c·∫£ b·∫°n b√®" && (
            <div className="text-lg text-gray-600">T√≠nh nƒÉng "{tab}" ƒëang ƒë∆∞·ª£c c·∫≠p nh·∫≠t...</div>
          )}
        </div>
      </div>
    </div>
  );
}
